/*========================================
  这是一个表达式的演示程序
  所有的表达都可以用在任何需要表达式的地方
  Create Date: 2014-08-26 19:29
========================================*/
main
{
   var Var1,Var2,Var3,Var4,Var5,Var6,Var7;
  
   var a = 0x55;
   var b = 0x0F;
   
   //四则运算表达式
   Var1 =  1 + 2; // + 加法,- 减法, * 乘法
   Var1 =  3 * 4; 
   Var1 = 10 / 2; // / 除法，结果不一定是整数，也可能是小数
   Var1 = 17 % 5; // % 求余, 结果相当是 17 - (17 整除 5) * 5

   //位域运算表达式，只有整数（包括10进制和16进制）才可以进行位域运算，其它的类型将会产生不可预计的结果,
   //整数的位域运算结果还是整数

   Var2 =  a & b; // 位与
   Var2 =  a | b; // 位或
   Var2 = ~a;     // 位取反
   Var2 =  a ^ b; // 位异或

   //位移表达式，只有整数（包括10进制和16进制）才可以进行位移运算，其它的类型将会产生不可预计的结果
   Var3 = a << b;  // a左移b位 (b 为整型，且不能超过32位)
   Var3 = a >> b;  // a右移b位 (b 为整型，且不能超过32位)
   Var3 = a <<< b; // a左移b位 (b 为整型，且不能超过32位)
   Var3 = a >>> b; // a右移b位 (b 为整型，且不能超过32位)

   //逻辑运算表达式的另一种表达符号，和C语言兼容，其结果是一样的
   Var3 =  a && b; // && 逻辑与, 和 and 相同
   Var3 =  a || b; // || 逻辑或,  和 or 相同
   Var3 = !a;      // !  逻辑否, 和 not 相同
   Var3 =  a ^^ b; // ^^ 逻辑异或, 和 xor相同

   //逻辑判断表达式，其结果为布尔值(True / False)
   Var4 = a == b; // == 相等，等於
   Var4 = a != b; // != 不等於
   Var4 = a <> b; // <> 不等於 (和 != 一样功能，兼容格式)
   Var4 = a > b;  // > 大於, >= 大於等於, < 小於, <= 小於等於

   //类型判断表达式
   Var6 = a == null;    //如果 a 是个空值

   //字符串
   Var7 = 'This is String' # 'Other String'; // # 是字符串连接符号, 使用这个符号,会将整个表达式的值都转化为字符串
   Var7 = Var1 # Var2 # Var3; // 自动将 Var1, Var2, Var3 转为字符串方式连接起来
   Var7 = "名字 = " # Var1 # ", 年龄 = " # Var2;  //混合方式连接成为字符串

}

