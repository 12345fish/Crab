/*========================================
    虚拟开发板演示程序
    Create Date: 2016-11-30 20:19
========================================*/
import System;

// LED 接口
interface System::LED
{
  default extern {get;set;}
  property A {set; index :1;}
}

//旋扭接口
interface System::Knob
{
  default extern {get:'getKnob'; set:'setKnob';}
  property A {get;set;index :1;}
  property B {get;set;index :2;}
}

//按键开关接口
interface System::Swit
{
  default extern {get: 'getSwitch'; set: 'setSwitch';}
  property A {get;set;index :1;}
  property B {get;set;index :2;}
  property C {get;set;index :3;}
}

/* LCD 显示程序
 * Text: 要显示的文本
 * Row: 第几行,默认是第1行
 * Col: 第几列,默认是第1列
 */
extern Display(string Text[30], Row, Col);

function ShowMyInfo()
{
  Display("Crab Board v2.0");
  Print("这个地方可以输出一些调试信息.\n");
}


//开关事件ID
const SWITCH_EVENT = 0x01000000;

//当第1组开关拨动的时候
//A1~A4
event OnSwitch1 : SWITCH_EVENT + 1
{
  var Value;
  
  Value = System.Swit.A;
  Display("Switch A:" # Value # " ", 3);
}

//当第2组开关拨动的时候
//B1~B4
event SWITCH_EVENT + 2
{
  var Value;

  Value = System.Swit.B;
  Display("Switch B:" # Value # " ", 3);
}

//当第3组开关拨动的时候
//C1~C4
event SWITCH_EVENT + 3
{
  var Value;

  Value = System.Swit.C;
  Display("Switch C:" # Value # " ", 3);
}

//主程序入口
main
{
   var NewTime, OldTime;
   var NewKnob1, NewKnob2, OldKnob1, OldKnob2;
   
   ShowMyInfo();

   OldKnob1 = 0;
   OldKnob2 = 0;
   OldTime = 0;
   
   OpenEvent();
   
   System.LED.A = true;
   
   repeat
   {
     //检查时间有没有发生变化(1秒1次),
     //有的话,则刷新显示屏
     NewTime = System.Clock.Time;

     if (NewTime != OldTime)
     {
      Display(NewTime, 4, 9);
      OldTime = NewTime;
     }

     //检查旋扭有没有发生变化(用户转动了),
     //有的话,则刷新显示屏
     NewKnob1 = System.Knob.A;
     NewKnob2 = System.Knob.B;
     
     if (NewKnob1 != OldKnob1)
     {
      Display("KB1:" # NewKnob1 # " ", 2);
      OldKnob1 = NewKnob1;
     }

     if (NewKnob2 != OldKnob2)
     {
      Display("KB2:" # NewKnob2 # " ", 2, 9);
      OldKnob2 = NewKnob2;
     }
   } until error;  //如果系统发生错误,则停止运行.
   
   CloseEvent();
   
}
